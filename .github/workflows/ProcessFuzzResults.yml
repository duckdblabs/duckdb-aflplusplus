name: Post-Process Fuzz Results
on:
  workflow_call:
    inputs:
      fuzzer:
        description: "fuzz scenario"
        required: true
        type: string
      duckdb_sha:
        type: string
      num_crashes:
        type: number
      num_hangs:
        type: number
      queue_length:
        type: number
      file_format:
        type: string

jobs:
  process-fuzz-results:
    name: Post-process fuzz results
    runs-on: ubuntu-24.04
    if: inputs.num_crashes != '0' || inputs.num_hangs != '0'
    env:
      DUCKDB_AFLPLUSPLUS_DIR: ${{ github.workspace }}/duckdb_aflplusplus
      NUM_CRASHES: ${{ inputs.num_crashes }}
      NUM_HANGS: ${{ inputs.num_hangs }}
      QUEUE_LENGTH: ${{ inputs.queue_length }}
      FILE_FORMAT: ${{ inputs.file_format }}

    steps:
      - name: print fuzz statistics
        run: |
          echo crahses found: $NUM_CRASHES
          echo hangs found: $NUM_HANGS
          echo queue length: $QUEUE_LENGTH
          echo file format: $FILE_FORMAT

      - name: Checkout duckdb_aflplusplus
        uses: actions/checkout@v4
        with:
          repository: duckdblabs/duckdb-aflplusplus
          path: duckdb_aflplusplus
          # src directory is used by some python scripts (e.g. decode_multi_param_files.py)
          sparse-checkout: |
            scripts
            src

      - name: download fuzz-results (created by previous job)
        uses: actions/download-artifact@v4
        with:
          name: ${{ inputs.fuzzer }}-${{ inputs.duckdb_sha }}-fuzz_results

      - name: extract fuzz-results
        run: |
          tar -xf fuzz_results.tar

      - name: decode crashes
        if: inputs.num_crashes != '0'
        run: |
          $DUCKDB_AFLPLUSPLUS_DIR/scripts/reproduction/decode_multi_param_files.py \
            read_$FILE_FORMAT \
            ${{ github.workspace }}/fuzz_results/${{ inputs.fuzzer }}/default/crashes \
            ${{ github.workspace }}/reproductions/crashes

      - name: decode hangs
        if: inputs.num_hangs != '0'
        run: |
          $DUCKDB_AFLPLUSPLUS_DIR/scripts/reproduction/decode_multi_param_files.py \
            read_$FILE_FORMAT \
            ${{ github.workspace }}/fuzz_results/${{ inputs.fuzzer }}/default/hangs \
            ${{ github.workspace }}/reproductions/hangs

      - run: tar -cvf reproductions.tar reproductions

      - name: Store reproductions as artifact
        uses: actions/upload-artifact@v4
        with:
          name: ${{ inputs.fuzzer }}-${{ inputs.duckdb_sha }}-reproductions
          path: reproductions.tar
