name: Afl++ Fuzzer
on:
  workflow_dispatch:
    inputs:
      duckdbRepo:
        description: "duckdb repository"
        required: true
        type: string
        default: duckdb/duckdb
      ref:
        description: "duckdb branch, tag, or full-length SHA"
        required: true
        type: string
        # oldest usable ref: 4ebeb16350eb2f819d682c581490af460dd0c995
        default: v1.4.0
      fuzzer:
        description: "fuzz scenario"
        required: true
        type: choice
        options:
          - csv_multi_param_fuzzer
          - json_multi_param_fuzzer
          - parquet_multi_param_fuzzer
        default: csv_multi_param_fuzzer
      fuzzTime:
        description: "fuzz time (seconds)"
        required: true
        type: number
        default: 3600
      cacheAFL:
        description: "cache AFL++ binaries"
        required: true
        type: boolean
        default: true
      cacheDuckDB:
        description: "use ccache for DuckDB"
        required: true
        type: boolean
        default: true
      createIssues:
        description: "create issues (only from duckdb-fuzzer-ci)"
        required: true
        type: choice
        options:
          - 'NotPossible'
        default: 'NotPossible'

  workflow_call:
    inputs:
      duckdbRepo:
        description: "duckdb repository"
        required: false
        type: string
        default: duckdb/duckdb
      ref:
        description: "duckdb branch, tag, or full-length SHA"
        required: true
        type: string
      fuzzer:
        description: "fuzz scenario"
        required: true
        type: string
      fuzzTime:
        description: "fuzz time (seconds)"
        required: true
        type: number
      cacheAFL:
        description: "cache AFL++ binaries"
        required: false
        type: boolean
        default: true
      cacheDuckDB:
        description: "use ccache for DuckDB"
        required: false
        type: boolean
        default: true
      createIssues:
        description: "create issues"
        required: false
        type: string
        default: 'YesIndeed'
    secrets:
      FUZZEROFDUCKSKEY:
        required: true

env:
  DUCKDB_AFLPLUSPLUS_DIR: ${{ github.workspace }}/duckdb_aflplusplus
  FUZZEROFDUCKSKEY: ${{ secrets.FUZZEROFDUCKSKEY }}
  DUCKDB_REF: ${{ inputs.ref }}

jobs:
  aflplusplus-fuzz-run:
    uses: ./.github/workflows/AFLFuzzRun.yml
    with:
      duckdbRepo: ${{ inputs.duckdbRepo }}
      ref: ${{ inputs.ref }}
      fuzzer: ${{ inputs.fuzzer }}
      fuzzTime: ${{ inputs.fuzzTime }}
      cacheAFL: ${{ inputs.cacheAFL }}
      cacheDuckDB: ${{ inputs.cacheDuckDB }}
      createIssues: ${{ inputs.createIssues }}
    secrets:
      FUZZEROFDUCKSKEY: ${{ secrets.FUZZEROFDUCKSKEY }}

  process-fuzz-results:
    needs: aflplusplus-fuzz-run
    if: needs.aflplusplus-fuzz-run.outputs.num_crashes != '0' || needs.aflplusplus-fuzz-run.outputs.num_hangs != '0'
    uses: ./.github/workflows/ProcessFuzzResults.yml
    with:
      fuzzer: ${{ inputs.fuzzer }}
      duckdb_sha: ${{ needs.aflplusplus-fuzz-run.outputs.duckdb_sha }}
      num_crashes: ${{ needs.aflplusplus-fuzz-run.outputs.num_crashes }}
      num_hangs: ${{ needs.aflplusplus-fuzz-run.outputs.num_hangs }}
      queue_length: ${{ needs.aflplusplus-fuzz-run.outputs.queue_length }}
      file_format: ${{ needs.aflplusplus-fuzz-run.outputs.file_format }}


  create_issues:
    needs: [aflplusplus-fuzz-run, process-fuzz-results]
    if: ${{ inputs.createIssues == 'YesIndeed' }}
    uses: ./.github/workflows/CreateIssues.yml
    with:
      createIssues: ${{ inputs.createIssues }}
      fuzzer: ${{ inputs.fuzzer }}
      duckdb_sha:  ${{ needs.aflplusplus-fuzz-run.outputs.duckdb_sha }}
      ref: ${{ inputs.ref }}
      duckdb_version:  ${{ needs.aflplusplus-fuzz-run.outputs.duckdb_version }}
      file_format: ${{ needs.aflplusplus-fuzz-run.outputs.file_format }}
      num_crashes: ${{ needs.aflplusplus-fuzz-run.outputs.num_crashes }}
      num_hangs: ${{ needs.aflplusplus-fuzz-run.outputs.num_hangs }}
    secrets:
      FUZZEROFDUCKSKEY: ${{ secrets.FUZZEROFDUCKSKEY }}
